name: 'Pipeline Workflow'

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./src
        shell: bash

    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release

  Publish:
    needs: Build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./src/ControleArmazem
        shell: bash

    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Install Amazon Lambda Tools
        run: dotnet tool install -g Amazon.Lambda.Tools
        
      - name: Publish Lambda Package
        run: dotnet lambda package --configuration Release --output-package ./controle_armazem_code.zip

      - name: Configure AWS credentials
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Verificando se bucket está criado
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: |
          BUCKET_NAME="controle_armazem_code_bucket"
          REGION="us-east-1"

          if ! aws s3api head-bucket --bucket "$BUCKET_NAME" 2>/dev/null; then
            echo "Bucket não existe. Criando bucket..."
            aws s3api create-bucket --bucket "$BUCKET_NAME" --create-bucket-configuration LocationConstraint="$REGION"
          else
            echo "Bucket validado. Processo de upload."
          fi

      - name: Upload to S3
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: |
          BUCKET_NAME="controle_armazem_code_bucket"
          aws s3api head-bucket --bucket "$BUCKET_NAME" || aws s3api create-bucket --bucket "$BUCKET_NAME"
          aws s3 cp lambda_api_function.zip s3://$BUCKET_NAME/

  CreateLambda: 
    needs: 'Publish'
    runs-on: ubuntu-latest 
    defaults:
      run:
        working-directory: ./infra
        shell: bash

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
        
    - name: Verificando se bucket está criado
      run: |
            BUCKET_NAME="controle_armazem_code_bucket"
            REGION="us-east-1"

            if ! aws s3api head-bucket --bucket "$BUCKET_NAME" 2>/dev/null; then
              echo "Bucket não existe. Criando bucket..."
              aws s3api create-bucket --bucket "$BUCKET_NAME" --create-bucket-configuration LocationConstraint="$REGION"
            else
              echo "Bucket validado. Processo de upload."
            fi

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
    
    - name: Terraform Init
      run: terraform init

    - name: Terraform Format
      run: terraform fmt -check

    - name: Terraform Plan
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: terraform plan -input=false

    - name: Apply Terraform
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: terraform apply -auto-approve